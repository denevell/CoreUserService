<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm    
http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
    version="2.0">

    <entity class="org.denevell.userservice.UserEntity"> 
       <table name="UserEntity" />
	   <named-query name="findWithUsernamePassword">
	       <query>select u from UserEntity u where u.username=:username and u.password=:password</query>
	   </named-query>       
	   <named-query name="listUsers">
	       <query>select u from UserEntity u</query>
	   </named-query>       
	   <named-query name="findByEmail">
	       <query>select u from UserEntity u where u.recoveryEmail=:recoveryEmail</query>
	   </named-query>       
	   <named-query name="countUsers">
	       <query>select count(u) from UserEntity u</query>
	   </named-query>       
	   <named-query name="findExistingUsername">
	       <query>select u from UserEntity u where u.username=:username</query>
	   </named-query>       
       <attributes>
            <id name="id">
	           <generated-value strategy="auto" />
            </id>
            <basic name="username">
	           <column name="username" nullable="false" length="50" />
            </basic>
            <basic name="admin">
	           <column name="admin" nullable="false" />
            </basic>
	        <basic name="password">
	           <column name="password" nullable="false" length="100" />
	        </basic>       
            <basic name="passwordResetRequest">
	           <column name="request_pw_reset" nullable="false"/>
            </basic>
            <basic name="recoveryEmail">
	           <column name="recovery_email" nullable="true"/>
            </basic>
       </attributes>
    </entity>    
    
    <entity class="org.denevell.userservice.LoggedInEntity"> 
       <table name="users_loggedin" />
	   <named-query name="findByAuthKey">
	       <query>select u from LoggedInEntity u where u.authKey=:auth_key</query>
	   </named-query>       
	   <named-query name="findByUserId">
	       <query>select u from LoggedInEntity u where u.userId=:user_id</query>
	   </named-query>       
       <attributes>
            <id name="authKey">
	           <column name="auth_key" nullable="false" length="500" />
	        </id>
            <basic name="userId">
	           <column name="user_id" nullable="false"/>
            </basic>
       </attributes>
    </entity>        
</entity-mappings>
